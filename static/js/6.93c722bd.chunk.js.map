{"version":3,"file":"static/js/6.93c722bd.chunk.js","mappings":"2PAmCA,UA5BA,WACE,OAAkCA,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIH,GAAa,GAFjB,UAG2BI,EAAAA,EAAAA,MAH3B,OAGUC,EAHV,OAIIH,EAAeG,EAASC,SAJ5B,mDAMuB,iBAAf,KAAMC,KANd,0CAOaC,EAAAA,GAAAA,KAAA,gCAPb,yBAUIR,GAAa,GAVjB,6EADc,uBAAC,WAAD,wBAcdS,EACD,GAAE,KAED,iCACE,SAAC,IAAD,CAAkBC,OAAQT,EAAaU,aAAc,mBACpDZ,IAAa,SAAC,IAAD,KACd,SAAC,KAAD,CAAgBa,UAAW,QAGhC,C,mJChCKC,EAAW,gCACXC,EAAU,mCAET,SAAeV,IAAtB,4CAAO,OAAP,oBAAO,6FACCW,EAAS,CACbC,QAASF,EACTG,SAAU,SAHP,SAKkBC,EAAAA,EAAAA,IAAA,UAAaL,EAAb,sBAA2C,CAChEE,OAAQA,IANL,cAKCV,EALD,yBAQEA,EAASc,MARX,kEAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,kGAA6BC,EAA7B,EAA6BA,UAAWC,EAAxC,EAAwCA,MACvCP,EAAS,CACbC,QAASF,EACTQ,MAAOA,EACPL,SAAU,QACVM,eAAe,GALZ,SAOkBL,EAAAA,EAAAA,IAAA,UAAaL,EAAb,gBAAqC,CAC1DW,OAAQH,EAAUG,OAClBT,OAAQA,IATL,cAOCV,EAPD,yBAWEA,EAASc,MAXX,kEAcA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,+FAAmCJ,EAAnC,EAAmCA,UAAWK,EAA9C,EAA8CA,QAASC,EAAvD,EAAuDA,WACtDZ,EAAS,CACbC,QAASF,EACTG,SAAU,SAHP,KAMGU,EANH,OAOE,UAPF,OAUE,SAVF,OAaE,YAbF,8BAQDC,EAAQ,UAAMf,EAAN,kBAAwBa,GAR/B,mCAWDE,EAAQ,UAAMf,EAAN,kBAAwBa,EAAxB,YAXP,mCAcDE,EAAQ,UAAMf,EAAN,kBAAwBa,EAAxB,YAdP,gFAmBkBR,EAAAA,EAAAA,IAAUU,EAAU,CACzCJ,OAAQH,EAAUG,OAClBT,OAAQA,IArBL,eAmBCV,EAnBD,yBAuBEA,EAASc,MAvBX,mE,8GC7BMU,EAAUC,EAAAA,EAAAA,QAAH,0CAIPC,EAAeD,EAAAA,EAAAA,GAAH,+CAGZE,EAAOF,EAAAA,EAAAA,GAAH,oIAOJG,EAAOH,EAAAA,EAAAA,GAAH,yCAGJI,EAAUJ,EAAAA,EAAAA,IAAH,2GAKPK,EAAQL,EAAAA,EAAAA,EAAH,yC,mBCclB,MAxBA,YAAqD,IAAzBpB,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,aAC5ByB,GAAWC,EAAAA,EAAAA,MACjB,OACE,UAACR,EAAD,WACGlB,IAAgB,SAACoB,EAAD,UAAepB,KAChC,SAACqB,EAAD,UACGtB,EAAO4B,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACxB,OACE,SAACR,EAAD,WACE,UAAC,KAAD,CAAMS,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,UACGK,GACC,SAACP,EAAD,CAASW,IAbR,kCAa0BJ,EAAaK,IAAKN,KAE7C,SAACN,EAAD,CAASW,IAAKE,EAAgBD,IAAKN,KAErC,SAACL,EAAD,UAAQK,QAPDD,EAWd,QAIR,C","sources":["Pages/Home.jsx","api.js","components/MoviesCollection/MoviesCollection.styled.jsx","components/MoviesCollection/MoviesCollection.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchTrendMovies } from '../api';\nimport MoviesCollection from 'components/MoviesCollection/MoviesCollection';\n\nfunction Home() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [trendMovies, setTrendMovies] = useState([]);\n\n  useEffect(() => {\n    async function loadTrendMovies() {\n      try {\n        setIsLoading(true);\n        const response = await fetchTrendMovies();\n        setTrendMovies(response.results);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          return toast.warn(`Oops, something went wrong.`);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    loadTrendMovies();\n  }, []);\n  return (\n    <>\n      <MoviesCollection movies={trendMovies} sectionTitle={'Trending Today'} />\n      {isLoading && <Loader />}\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n}\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1bfc473de4fefb6be0222ae7c51b95d7';\n\nexport async function fetchTrendMovies() {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: params,\n  });\n  return response.data;\n}\n\nexport async function fetchMovies({ abortCtrl, query }) {\n  const params = {\n    api_key: API_KEY,\n    query: query,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const response = await axios.get(`${BASE_URL}search/movie`, {\n    signal: abortCtrl.signal,\n    params: params,\n  });\n  return response.data;\n}\n\nexport async function fetchMovieDetails({ abortCtrl, movieId, fetchField }) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  let endPoint;\n  switch (fetchField) {\n    case 'movie':\n      endPoint = `${BASE_URL}/movie/${movieId}`;\n      break;\n    case 'cast':\n      endPoint = `${BASE_URL}/movie/${movieId}/credits`;\n      break;\n    case 'reviews':\n      endPoint = `${BASE_URL}/movie/${movieId}/reviews`;\n      break;\n    default:\n      return;\n  }\n  const response = await axios.get(endPoint, {\n    signal: abortCtrl.signal,\n    params: params,\n  });\n  return response.data;\n}\n","import styled from '@emotion/styled';\nexport const Section = styled.section`\n  padding: 20px;\n`;\n\nexport const SectionTitle = styled.h2`\n  padding: 16px 30px;\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 20px;\n`;\nexport const Item = styled.li`\n  width: 150px;\n`;\nexport const Picture = styled.img`\n  width: 150px;\n  height: 225px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n`;\nexport const Title = styled.p`\n  padding: 6px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  Section,\n  SectionTitle,\n  List,\n  Item,\n  Picture,\n  Title,\n} from './MoviesCollection.styled';\nimport defaultPicture from '../../images/default-image.jpg';\n\nconst IMAGES_URL = 'https://image.tmdb.org/t/p/w500';\n\nfunction MoviesCollection({ movies, sectionTitle }) {\n  const location = useLocation();\n  return (\n    <Section>\n      {sectionTitle && <SectionTitle>{sectionTitle}</SectionTitle>}\n      <List>\n        {movies.map(({ id, title, poster_path }) => {\n          return (\n            <Item key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {poster_path ? (\n                  <Picture src={IMAGES_URL + poster_path} alt={title} />\n                ) : (\n                  <Picture src={defaultPicture} alt={title} />\n                )}\n                <Title>{title}</Title>\n              </Link>\n            </Item>\n          );\n        })}\n      </List>\n    </Section>\n  );\n}\nexport default MoviesCollection;\n"],"names":["useState","isLoading","setIsLoading","trendMovies","setTrendMovies","useEffect","fetchTrendMovies","response","results","code","toast","loadTrendMovies","movies","sectionTitle","autoClose","BASE_URL","API_KEY","params","api_key","language","axios","data","fetchMovies","abortCtrl","query","include_adult","signal","fetchMovieDetails","movieId","fetchField","endPoint","Section","styled","SectionTitle","List","Item","Picture","Title","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","defaultPicture"],"sourceRoot":""}