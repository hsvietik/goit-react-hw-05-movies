{"version":3,"file":"static/js/958.db1bfb98.chunk.js","mappings":"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","sources":["components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","Pages/Movies.jsx","api.js","components/MoviesCollection/MoviesCollection.styled.jsx","components/MoviesCollection/MoviesCollection.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const StyledSearchbar = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #90cea1;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\nexport const StyledForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 300px;\n  background-color: #fff;\n  border-radius: 40px;\n  overflow: hidden;\n`;\nexport const SearchButton = styled.button`\n  display: inline-block;\n  padding: 0px 14px 0px 10px;\n  width: 40px;\n  height: 40px;\n  border: 0;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  background-color: #fff;\n  color: #0d253f;\n  &:hover {\n    color: #01b4e4;\n  }\n`;\nexport const SearchInput = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  height: 40px;\n  padding: 0px 0px 0px 14px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { Formik } from 'formik';\nimport { ImSearch } from 'react-icons/im';\nimport {\n  StyledSearchbar,\n  StyledForm,\n  SearchButton,\n  SearchInput,\n} from './Searchbar.styled';\n\nfunction Searchbar({ onSubmit, initialValue }) {\n  const handleSubmit = ({ query }) => {\n    onSubmit(query.toLowerCase());\n  };\n\n  return (\n    <StyledSearchbar>\n      <Formik initialValues={{ query: initialValue }} onSubmit={handleSubmit}>\n        <StyledForm>\n          <SearchInput\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search for a movie\"\n            name=\"query\"\n          />\n          <SearchButton type=\"submit\">\n            <ImSearch size=\"20px\" />\n          </SearchButton>\n        </StyledForm>\n      </Formik>\n    </StyledSearchbar>\n  );\n}\nexport default Searchbar;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchMovies } from '../api';\nimport Searchbar from '../components/Searchbar/Searchbar';\nimport MoviesCollection from 'components/MoviesCollection/MoviesCollection';\n\nfunction Movies() {\n  const abortCtrl = useRef();\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const onQueryChange = chosenQuery => {\n    chosenQuery ? setSearchParams({ query: chosenQuery }) : setSearchParams({});\n    if (chosenQuery !== query) setMovies([]);\n  };\n\n  useEffect(() => {\n    if (query === '') return;\n    async function loadMovies() {\n      if (abortCtrl.current) {\n        abortCtrl.current.abort();\n      }\n      abortCtrl.current = new AbortController();\n      try {\n        setIsLoading(true);\n        const response = await fetchMovies({\n          abortCtrl,\n          query,\n        });\n        if (!response.results.length) {\n          return toast.warn(\n            `Sorry, there are no movies matching your search query. Please try again.`\n          );\n        }\n        setMovies(response.results);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          return toast.warn(`Oops, something went wrong.`);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    loadMovies();\n  }, [query, setSearchParams]);\n\n  return (\n    <>\n      <Searchbar\n        onSubmit={query => onQueryChange(query)}\n        initialValue={query}\n      />\n      <MoviesCollection movies={movies} />\n      {isLoading && <Loader />}\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n}\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1bfc473de4fefb6be0222ae7c51b95d7';\n\nexport async function fetchTrendMovies() {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: params,\n  });\n  return response.data;\n}\n\nexport async function fetchMovies({ abortCtrl, query }) {\n  const params = {\n    api_key: API_KEY,\n    query: query,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const response = await axios.get(`${BASE_URL}search/movie`, {\n    signal: abortCtrl.signal,\n    params: params,\n  });\n  return response.data;\n}\n\nexport async function fetchMovieDetails({ abortCtrl, movieId, fetchField }) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  let endPoint;\n  switch (fetchField) {\n    case 'movie':\n      endPoint = `${BASE_URL}/movie/${movieId}`;\n      break;\n    case 'cast':\n      endPoint = `${BASE_URL}/movie/${movieId}/credits`;\n      break;\n    case 'reviews':\n      endPoint = `${BASE_URL}/movie/${movieId}/reviews`;\n      break;\n    default:\n      return;\n  }\n  const response = await axios.get(endPoint, {\n    signal: abortCtrl.signal,\n    params: params,\n  });\n  return response.data;\n}\n","import styled from '@emotion/styled';\nexport const Section = styled.section`\n  padding: 20px;\n`;\n\nexport const SectionTitle = styled.h2`\n  padding: 16px 30px;\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 20px;\n`;\nexport const Item = styled.li`\n  width: 150px;\n`;\nexport const Picture = styled.img`\n  width: 150px;\n  height: 225px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n`;\nexport const Title = styled.p`\n  padding: 6px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  Section,\n  SectionTitle,\n  List,\n  Item,\n  Picture,\n  Title,\n} from './MoviesCollection.styled';\nimport defaultPicture from '../../images/default-image.jpg';\n\nconst IMAGES_URL = 'https://image.tmdb.org/t/p/w500';\n\nfunction MoviesCollection({ movies, sectionTitle }) {\n  const location = useLocation();\n  return (\n    <Section>\n      {sectionTitle && <SectionTitle>{sectionTitle}</SectionTitle>}\n      <List>\n        {movies.map(({ id, title, poster_path }) => {\n          return (\n            <Item key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {poster_path ? (\n                  <Picture src={IMAGES_URL + poster_path} alt={title} />\n                ) : (\n                  <Picture src={defaultPicture} alt={title} />\n                )}\n                <Title>{title}</Title>\n              </Link>\n            </Item>\n          );\n        })}\n      </List>\n    </Section>\n  );\n}\nexport default MoviesCollection;\n"],"names":["StyledSearchbar","styled","StyledForm","Form","SearchButton","SearchInput","Field","onSubmit","initialValue","initialValues","query","toLowerCase","type","autoComplete","autoFocus","placeholder","name","size","abortCtrl","useRef","useState","isLoading","setIsLoading","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","onQueryChange","chosenQuery","useEffect","current","abort","AbortController","fetchMovies","response","results","length","toast","code","loadMovies","MoviesCollection","Loader","autoClose","BASE_URL","API_KEY","fetchTrendMovies","params","api_key","language","axios","data","include_adult","signal","fetchMovieDetails","movieId","fetchField","endPoint","Section","SectionTitle","List","Item","Picture","Title","sectionTitle","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","defaultPicture"],"sourceRoot":""}